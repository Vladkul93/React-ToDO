{"ast":null,"code":"// import './App.css';\n// import { useState } from 'react'; \n// import TodoInput from './components/TodoInput';\n// import TodoList from './components/TodoList';\n\n// let  App =()=> {\n\n//   let [todo, setTodo] = useState(\"\");\n//   let [todos, setTodos] = useState([]);\n\n//   let addToDo = ()=> {\n//       if(todo !== '') {\n//         setTodos([...todos, todo]);\n//         setTodo(\"\");\n//       }\n//   };\n\n//   let deleteButton = (text) => {\n//       let newTodos = todos.filter((todo)=> {\n//           return todo !== text;\n//       });\n//       setTodos(newTodos);\n//   };\n\n//   return (\n//     <div className='App'>\n//       <h1>To-Do List</h1>\n//       <TodoInput todo={todo} addToDo={addToDo} setTodo={setTodo} />\n//       <TodoList  remove={deleteButton} list={todos}/>\n//     </div>\n//   );\n// };\n//   export default App;\n\n//  import { useState } from \"react\";\n// import TodoInputs from \"./components/TodoInputs\";\n// import TodoList from \"./components/TodoList\";\n// import \"./App.css\";\n\n// let App = () => {\n//   let [todos, setTodos] = useState([]);\n//   let [todo, setTodo] = useState(\"\");\n\n//   let addTodo = () => {\n//     if (todo !== \"\") {\n//       setTodos([...todos, todo]);\n//       setTodo(\"\");\n//     }\n//   };\n\n//   let deleteTodo = (text) => {\n//     let newTodos = todos.filter((todo) => {\n//       return todo !== text;\n//     });\n//     setTodos(newTodos);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>React Todo App</h1>\n//       <TodoInputs todo={todo} setTodo={setTodo} addTodo={addTodo} />\n//       <TodoList list={todos} remove={deleteTodo} />\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Vlad/OneDrive/Рабочий стол/toDoReact/my-app/src/App.js"],"sourcesContent":["// import './App.css';\n// import { useState } from 'react'; \n// import TodoInput from './components/TodoInput';\n// import TodoList from './components/TodoList';\n\n// let  App =()=> {\n\n//   let [todo, setTodo] = useState(\"\");\n//   let [todos, setTodos] = useState([]);\n\n//   let addToDo = ()=> {\n//       if(todo !== '') {\n//         setTodos([...todos, todo]);\n//         setTodo(\"\");\n//       }\n//   };\n\n//   let deleteButton = (text) => {\n//       let newTodos = todos.filter((todo)=> {\n//           return todo !== text;\n//       });\n//       setTodos(newTodos);\n//   };\n\n//   return (\n//     <div className='App'>\n//       <h1>To-Do List</h1>\n//       <TodoInput todo={todo} addToDo={addToDo} setTodo={setTodo} />\n//       <TodoList  remove={deleteButton} list={todos}/>\n//     </div>\n//   );\n// };\n//   export default App;\n\n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  //  import { useState } from \"react\";\n  // import TodoInputs from \"./components/TodoInputs\";\n  // import TodoList from \"./components/TodoList\";\n  // import \"./App.css\";\n\n  // let App = () => {\n  //   let [todos, setTodos] = useState([]);\n  //   let [todo, setTodo] = useState(\"\");\n\n  //   let addTodo = () => {\n  //     if (todo !== \"\") {\n  //       setTodos([...todos, todo]);\n  //       setTodo(\"\");\n  //     }\n  //   };\n\n  //   let deleteTodo = (text) => {\n  //     let newTodos = todos.filter((todo) => {\n  //       return todo !== text;\n  //     });\n  //     setTodos(newTodos);\n  //   };\n\n  //   return (\n  //     <div className=\"App\">\n  //       <h1>React Todo App</h1>\n  //       <TodoInputs todo={todo} setTodo={setTodo} addTodo={addTodo} />\n  //       <TodoList list={todos} remove={deleteTodo} />\n  //     </div>\n  //   );\n  // };\n\n  // export default App;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAiCE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}