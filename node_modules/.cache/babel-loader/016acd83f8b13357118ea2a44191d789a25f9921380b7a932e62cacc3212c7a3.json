{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\toDoReact\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport TodoInputs from './components/TodoInputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [todo, setTodo] = useState(\"\");\n  let [todos, setTodos] = useState([]);\n  let addTodo = () => {\n    if (todo !== \"\") {\n      setTodos([...todos, todo]);\n      setTodo(\"\");\n    }\n  };\n  let deleteTodo = text => {\n    let newTodos = todos.filter(todo => {\n      return todo !== text;\n    });\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoInputs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TouchList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7DKd7CJCdxVY/pQjjQ6xII7vyb4=\");\n_c = App;\nexport default App;\n\n// import React from 'react'\n// import { useState } from 'react'\n// import './App.css';\n\n//   function App() {\n\n//     let [state, setState] = useState('');\n//     let [states, setStates] = useState([]);\n\n// let addToState = ()=> {\n//   if(state !== '') {\n//     setStates([...states, state])\n//     setState('');\n//   }\n// }\n\n// let deleteTodo =(text)=> {\n//   let newTodos = states.filter((state)=> {\n//     return state !== text;\n//   });\n//   setStates(newTodos);\n// }\n\n//     return (\n\n//       <div className='App'>\n//         <h1>To-Do List</h1>\n//         <div className='input-wrapper'>\n//           <input \n//                 type='text'\n//                 value={state}\n//                 name='todo'\n//                 placeholder='please write...'\n//                 onChange={(e)=> setState(e.target.value)}\n//               >\n//             </input>\n//                 <button \n//                   className='add-button'\n//                   onClick={addToState}\n//                 >Add</button>\n//         </div>\n//         {states?.length > 0 ? (\n//           <ul className='todo-list'>\n//               {states.map((state, index)=> (\n//                 <div className='todo'>\n//                     <li key={index}>{state}</li>\n//                     <button className ='delete-button'\n//                       onClick={()=> deleteTodo(state)}\n//                     >Delete</button>\n//                 </div>\n//               ))}\n//           </ul>\n//   ) : (\n//   <div className='empty'>\n//     <p>No found</p>\n//   </div>\n// )}\n//   </div>\n//     )}\n\n//   export default App;\n\n// import { useState } from \"react\";\n// import TodoInputs from \"./components/TodoInputs\";\n// import TodoList from \"./components/TodoList\";\n// import \"./App.css\";\n\n// let App = () => {\n//   let [todos, setTodos] = useState([]);\n//   let [todo, setTodo] = useState(\"\");\n\n//   let addTodo = () => {\n//     if (todo !== \"\") {\n//       setTodos([...todos, todo]);\n//       setTodo(\"\");\n//     }\n//   };\n\n//   let deleteTodo = (text) => {\n//     let newTodos = todos.filter((todo) => {\n//       return todo !== text;\n//     });\n//     setTodos(newTodos);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>React Todo App</h1>\n//       <TodoInputs todo={todo} setTodo={setTodo} addTodo={addTodo} />\n//       <TodoList list={todos} remove={deleteTodo} />\n//     </div>\n//   );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","React","TodoInputs","jsxDEV","_jsxDEV","App","_s","todo","setTodo","todos","setTodos","addTodo","deleteTodo","text","newTodos","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","TouchList","_c","$RefreshReg$"],"sources":["C:/Users/Vlad/OneDrive/Рабочий стол/toDoReact/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport React from 'react'\nimport TodoInputs from './components/TodoInputs';\n\nfunction App() {\n\n  let [todo, setTodo] = useState(\"\");\n  let [todos, setTodos] = useState([]);\n\n  let addTodo = ()=> {\n    if(todo !== \"\") {\n      setTodos([...todos, todo]);\n      setTodo(\"\");\n    }\n  }\n\n  let deleteTodo = (text)=> {\n      let newTodos = todos.filter((todo)=> {\n          return todo !== text;\n      });\n      setTodos(newTodos);\n  } \n\n  return (\n\n    <div className='App'>\n      <h1>To Do List</h1>\n      <TodoInputs/>\n      <TouchList/>\n      {/* <input\n        type='text'\n        value={todo}\n        placeholder='Введіть значення'\n        name='todo'\n        onChange={(e)=> {setTodo(e.target.value)}}\n      />\n      <button \n        className='add-button'\n        onClick = {addTodo}\n      >Додати</button> */}\n\n    {/* {todos?.length > 0 ? (\n      <ul className='todo-List'>\n          {todos.map((todo, index)=> (\n            <div className='todo'>\n              <li key={index}>{todo}</li>\n              <button className='delete-button'\n                  onClick={()=> deleteTodo(todo)}\n                >Видалити</button>\n            </div>\n          ))}\n      </ul>\n  ) : (\n          <div className='empty'>\n              <p>To Do is not found</p>\n          </div>\n  )} */}\n    </div>\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react'\n// import { useState } from 'react'\n// import './App.css';\n\n//   function App() {\n\n//     let [state, setState] = useState('');\n//     let [states, setStates] = useState([]);\n\n// let addToState = ()=> {\n//   if(state !== '') {\n//     setStates([...states, state])\n//     setState('');\n//   }\n// }\n\n// let deleteTodo =(text)=> {\n//   let newTodos = states.filter((state)=> {\n//     return state !== text;\n//   });\n//   setStates(newTodos);\n// }\n\n//     return (\n\n//       <div className='App'>\n//         <h1>To-Do List</h1>\n//         <div className='input-wrapper'>\n//           <input \n//                 type='text'\n//                 value={state}\n//                 name='todo'\n//                 placeholder='please write...'\n//                 onChange={(e)=> setState(e.target.value)}\n//               >\n//             </input>\n//                 <button \n//                   className='add-button'\n//                   onClick={addToState}\n//                 >Add</button>\n//         </div>\n//         {states?.length > 0 ? (\n//           <ul className='todo-list'>\n//               {states.map((state, index)=> (\n//                 <div className='todo'>\n//                     <li key={index}>{state}</li>\n//                     <button className ='delete-button'\n//                       onClick={()=> deleteTodo(state)}\n//                     >Delete</button>\n//                 </div>\n//               ))}\n//           </ul>\n//   ) : (\n//   <div className='empty'>\n//     <p>No found</p>\n//   </div>\n// )}\n//   </div>\n//     )}\n    \n        \n\n//   export default App;\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  // import { useState } from \"react\";\n  // import TodoInputs from \"./components/TodoInputs\";\n  // import TodoList from \"./components/TodoList\";\n  // import \"./App.css\";\n\n  // let App = () => {\n  //   let [todos, setTodos] = useState([]);\n  //   let [todo, setTodo] = useState(\"\");\n\n  //   let addTodo = () => {\n  //     if (todo !== \"\") {\n  //       setTodos([...todos, todo]);\n  //       setTodo(\"\");\n  //     }\n  //   };\n\n  //   let deleteTodo = (text) => {\n  //     let newTodos = todos.filter((todo) => {\n  //       return todo !== text;\n  //     });\n  //     setTodos(newTodos);\n  //   };\n\n  //   return (\n  //     <div className=\"App\">\n  //       <h1>React Todo App</h1>\n  //       <TodoInputs todo={todo} setTodo={setTodo} addTodo={addTodo} />\n  //       <TodoList list={todos} remove={deleteTodo} />\n  //     </div>\n  //   );\n  // };\n\n  // export default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,IAAI,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,IAAIW,OAAO,GAAGA,CAAA,KAAK;IACjB,IAAGJ,IAAI,KAAK,EAAE,EAAE;MACdG,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEF,IAAI,CAAC,CAAC;MAC1BC,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,IAAII,UAAU,GAAIC,IAAI,IAAI;IACtB,IAAIC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAER,IAAI,IAAI;MACjC,OAAOA,IAAI,KAAKM,IAAI;IACxB,CAAC,CAAC;IACFH,QAAQ,CAACI,QAAQ,CAAC;EACtB,CAAC;EAED,oBAEEV,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA,CAACF,UAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACbjB,OAAA,CAACkB,SAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA6BT,CAAC;AAEV;AAACf,EAAA,CAvDQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAyDZ,eAAeA,GAAG;;AA0BlB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AA8BE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}